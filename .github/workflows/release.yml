name: CI & Release

on:
  pull_request:
  push:
    branches:
      - main

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_REPO: ${{ github.repository_owner }}/sm-kubernetes
  IMAGE_TAGS: ${{ github.sha }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install musl-gcc
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: make test

  container-test:
    name: Check Containerfile Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify Containerfile builds
        run: docker build -f ./Containerfile .

  build-and-push:
    name: Build, Sign & Push
    needs: 
      - test
      - container-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      packages: write
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.8.2

    - name: Install Syft
      uses: anchore/sbom-action/download-syft@v0.20.0

    - name: Log in to GHCR
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Image with Buildah
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_REPO }}
        tags: ${{ env.IMAGE_TAGS }}
        dockerfiles: ./Containerfile

    - name: Push Image to GHCR
      id: push-image
      uses: redhat-actions/push-to-registry@v2
      with:
        registry: ${{ env.IMAGE_REGISTRY }}
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}

    - name: Get Image Digest
      run: echo "DIGEST=${{ steps.push-image.outputs.digest }}" >> $GITHUB_ENV

    - name: Sign Image with GitHub OIDC Token
      run: cosign sign --yes ${IMAGE_REGISTRY}/${IMAGE_REPO}@${DIGEST}
      env:
        DIGEST: ${{ steps.push-image.outputs.digest }}

    - name: Generate and Store SBOM
      run: |
        syft "${IMAGE_REGISTRY}/${IMAGE_REPO}@${DIGEST}" -o spdx-json=sbom-spdx.json
        cosign attest --yes --predicate sbom-spdx.json --type spdx "${IMAGE_REGISTRY}/${IMAGE_REPO}@${DIGEST}"
      env:
        DIGEST: ${{ steps.push-image.outputs.digest }}